{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Distributed data aggregation system API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/query": {
            "post": {
                "description": "Queries data with specified grouping and selection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Query data from a table",
                "parameters": [
                    {
                        "description": "Query Request",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.HttpQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query has been processed",
                        "schema": {
                            "$ref": "#/definitions/main.HttpResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Checks controller status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health check"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Health check passed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "description": "Returns the names of non-empty folders in the data path",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "List available tables",
                "responses": {
                    "200": {
                        "description": "List of table names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "strinf"
                        }
                    }
                }
            }
        },
        "/tables/columns": {
            "get": {
                "description": "Returns column names and their types for a given table",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tables"
                ],
                "summary": "Get table columns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of columns with their types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/main.ParquetColumnInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with error message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.HttpAggregateFunction": {
            "type": "string",
            "enum": [
                "Minimum",
                "Maximum",
                "Average",
                "Sum",
                "Count"
            ],
            "x-enum-varnames": [
                "Minimum",
                "Maximum",
                "Average",
                "Sum",
                "Count"
            ]
        },
        "main.HttpError": {
            "type": "object",
            "properties": {
                "inner_message": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "main.HttpPartialResult": {
            "type": "object",
            "properties": {
                "aggregation": {
                    "type": "string"
                },
                "count": {
                    "description": "Count associated with the result.",
                    "type": "integer"
                },
                "double_value": {
                    "description": "Double value (nullable).",
                    "type": "number"
                },
                "float_value": {
                    "description": "Float value (nullable).",
                    "type": "number"
                },
                "is_null": {
                    "description": "Indicates if the result is null.",
                    "type": "boolean"
                },
                "result_type": {
                    "description": "Type of result: \"INT\", \"FLOAT\", \"DOUBLE\".",
                    "type": "string"
                },
                "value": {
                    "description": "Integer value (nullable).",
                    "type": "integer"
                }
            }
        },
        "main.HttpQueryRequest": {
            "type": "object",
            "properties": {
                "group_columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "select": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.HttpSelect"
                    }
                },
                "table_name": {
                    "type": "string"
                }
            }
        },
        "main.HttpQueryResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/main.HttpError"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.HttpValue"
                    }
                }
            }
        },
        "main.HttpResult": {
            "type": "object",
            "properties": {
                "processing_time": {
                    "type": "integer"
                },
                "result": {
                    "$ref": "#/definitions/main.HttpQueryResponse"
                }
            }
        },
        "main.HttpSelect": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string"
                },
                "function": {
                    "$ref": "#/definitions/main.HttpAggregateFunction"
                }
            }
        },
        "main.HttpValue": {
            "type": "object",
            "properties": {
                "grouping_value": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.HttpPartialResult"
                    }
                }
            }
        },
        "main.ParquetColumnInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}